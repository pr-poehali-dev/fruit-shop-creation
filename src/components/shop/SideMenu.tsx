import { Sheet, SheetContent, SheetHeader, SheetTitle, SheetTrigger } from '@/components/ui/sheet';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Separator } from '@/components/ui/separator';
import Icon from '@/components/ui/icon';
import { useState, useEffect } from 'react';

interface User {
  id: number;
  phone: string;
  full_name: string;
  is_admin: boolean;
  balance?: number;
  cashback?: number;
}

interface SideMenuProps {
  siteSettings?: {
    site_name?: string;
    site_description?: string;
    phone?: string;
    email?: string;
    address?: string;
    work_hours?: string;
    promotions?: string;
    additional_info?: string;
    price_list_url?: string;
    logo_url?: string;
  };
  user?: User | null;
  onSectionChange: (section: string) => void;
}

interface BeforeInstallPromptEvent extends Event {
  prompt: () => Promise<void>;
  userChoice: Promise<{ outcome: 'accepted' | 'dismissed' }>;
}

const SideMenu = ({ siteSettings, user, onSectionChange }: SideMenuProps) => {
  const [open, setOpen] = useState(false);
  const [deferredPrompt, setDeferredPrompt] = useState<BeforeInstallPromptEvent | null>(null);
  const [isInstalled, setIsInstalled] = useState(false);
  const [referralCode, setReferralCode] = useState<string>('');
  const [referralStats, setReferralStats] = useState<{total_referrals: number; total_earned: number} | null>(null);
  const [copied, setCopied] = useState(false);

  useEffect(() => {
    const handler = (e: Event) => {
      e.preventDefault();
      setDeferredPrompt(e as BeforeInstallPromptEvent);
    };

    window.addEventListener('beforeinstallprompt', handler);

    if (window.matchMedia('(display-mode: standalone)').matches) {
      setIsInstalled(true);
    }

    return () => {
      window.removeEventListener('beforeinstallprompt', handler);
    };
  }, []);

  useEffect(() => {
    const fetchReferralData = async () => {
      if (!user?.id) return;

      try {
        const codeResponse = await fetch(
          `https://functions.poehali.dev/2cc7c24d-08b2-4c44-a9a7-8d09198dbefc?action=referral_code&user_id=${user.id}`
        );
        
        if (codeResponse.ok) {
          const codeData = await codeResponse.json();
          if (codeData.referral_code) {
            setReferralCode(codeData.referral_code);
          }
        }

        const statsResponse = await fetch(
          `https://functions.poehali.dev/2cc7c24d-08b2-4c44-a9a7-8d09198dbefc?action=referral_stats&user_id=${user.id}`
        );
        
        if (statsResponse.ok) {
          const statsData = await statsResponse.json();
          setReferralStats(statsData);
        }
      } catch (error) {
        console.error('Failed to fetch referral data:', error);
      }
    };

    if (open && user) {
      fetchReferralData();
    }
  }, [open, user]);

  const handleNavigate = (section: string) => {
    onSectionChange(section);
    setOpen(false);
  };

  const handleInstallApp = async () => {
    if (!deferredPrompt) return;

    deferredPrompt.prompt();
    const { outcome } = await deferredPrompt.userChoice;

    if (outcome === 'accepted') {
      setDeferredPrompt(null);
      setIsInstalled(true);
    }
  };

  const copyReferralLink = () => {
    const link = `${window.location.origin}?ref=${referralCode}`;
    navigator.clipboard.writeText(link);
    setCopied(true);
    setTimeout(() => setCopied(false), 2000);
  };

  return (
    <Sheet open={open} onOpenChange={setOpen}>
      <SheetTrigger asChild>
        <Button 
          variant="ghost" 
          size="icon" 
          className="text-primary-foreground hover:bg-primary/90"
          title="–ú–µ–Ω—é"
        >
          <Icon name="Menu" size={24} />
        </Button>
      </SheetTrigger>
      <SheetContent side="left" className="w-full sm:max-w-md overflow-y-auto">
        <SheetHeader className="mb-6">
          <SheetTitle className="flex items-center gap-2 text-2xl" style={{ 
            fontFamily: "'Playfair Display', serif",
            color: '#2d5016'
          }}>
            {siteSettings?.logo_url ? (
              <img 
                src={siteSettings.logo_url} 
                alt="–õ–æ–≥–æ—Ç–∏–ø"
                className="h-8 w-8 rounded-full object-cover"
              />
            ) : (
              <Icon name="Flower2" size={32} className="text-primary" />
            )}
            {siteSettings?.site_name || '–ü–∏—Ç–æ–º–Ω–∏–∫ —Ä–∞—Å—Ç–µ–Ω–∏–π'}
            <span className="text-green-500 text-xl">üåø</span>
          </SheetTitle>
          {siteSettings?.site_description && (
            <p className="text-sm text-muted-foreground text-left">
              {siteSettings.site_description}
            </p>
          )}
        </SheetHeader>

        <div className="space-y-6">
          <div>
            <h3 className="text-sm font-semibold text-muted-foreground mb-3 uppercase tracking-wider">
              –ù–∞–≤–∏–≥–∞—Ü–∏—è
            </h3>
            <nav className="space-y-1">
              <Button
                variant="ghost"
                className="w-full justify-start text-base h-12"
                onClick={() => handleNavigate('home')}
              >
                <Icon name="Home" size={20} className="mr-3" />
                –ì–ª–∞–≤–Ω–∞—è
              </Button>
              <Button
                variant="ghost"
                className="w-full justify-start text-base h-12"
                onClick={() => handleNavigate('catalog')}
              >
                <Icon name="ShoppingBag" size={20} className="mr-3" />
                –ö–∞—Ç–∞–ª–æ–≥
              </Button>
              <Button
                variant="ghost"
                className="w-full justify-start text-base h-12"
                onClick={() => handleNavigate('about')}
              >
                <Icon name="Info" size={20} className="mr-3" />
                –û –Ω–∞—Å
              </Button>
              <Button
                variant="ghost"
                className="w-full justify-start text-base h-12"
                onClick={() => handleNavigate('delivery')}
              >
                <Icon name="Truck" size={20} className="mr-3" />
                –î–æ—Å—Ç–∞–≤–∫–∞
              </Button>
              <Button
                variant="ghost"
                className="w-full justify-start text-base h-12"
                onClick={() => handleNavigate('care')}
              >
                <Icon name="Sprout" size={20} className="mr-3" />
                –£—Ö–æ–¥ –∑–∞ —Ä–∞—Å—Ç–µ–Ω–∏—è–º–∏
              </Button>
              <Button
                variant="ghost"
                className="w-full justify-start text-base h-12"
                onClick={() => handleNavigate('contacts')}
              >
                <Icon name="Phone" size={20} className="mr-3" />
                –ö–æ–Ω—Ç–∞–∫—Ç—ã
              </Button>
              <Button
                variant="ghost"
                className="w-full justify-start text-base h-12"
                onClick={() => handleNavigate('gallery')}
              >
                <Icon name="Images" size={20} className="mr-3" />
                –ì–∞–ª–µ—Ä–µ—è
              </Button>
            </nav>
          </div>

          <Separator />

          {user && (
            <>
              <div>
                <Card className="bg-gradient-to-br from-amber-50 to-amber-100 dark:from-amber-950/20 dark:to-amber-900/20 border-amber-200 dark:border-amber-800 relative overflow-hidden">
                  <div className="absolute top-2 right-2 bg-orange-500 text-white text-[10px] font-bold px-2 py-1 rounded-full uppercase tracking-wide">
                    –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
                  </div>
                  <CardHeader className="pb-3 pr-24">
                    <CardTitle className="flex items-center gap-2 text-base">
                      <Icon name="Users" size={20} className="text-amber-600 dark:text-amber-400" />
                      –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-3">
                    <div className="space-y-2 text-sm">
                      <p className="font-semibold flex items-start gap-2">
                        <Icon name="Gift" size={16} className="text-amber-600 mt-0.5 flex-shrink-0" />
                        <span>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</span>
                      </p>
                      <ul className="space-y-1.5 text-xs text-muted-foreground ml-6">
                        <li className="flex items-start gap-2">
                          <span className="text-amber-600 mt-0.5">1.</span>
                          <span>–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–µ–π —É–Ω–∏–∫–∞–ª—å–Ω–æ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π —Å –¥—Ä—É–∑—å—è–º–∏</span>
                        </li>
                        <li className="flex items-start gap-2">
                          <span className="text-amber-600 mt-0.5">2.</span>
                          <span>–î—Ä—É–≥ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ –≤ –º–∞–≥–∞–∑–∏–Ω–µ</span>
                        </li>
                        <li className="flex items-start gap-2">
                          <span className="text-amber-600 mt-0.5">3.</span>
                          <span>–ü–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞ –¥—Ä—É–≥–∞ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ <strong className="text-amber-700 dark:text-amber-500">500 ‚ÇΩ</strong> –Ω–∞ –±–∞–ª–∞–Ω—Å</span>
                        </li>
                        <li className="flex items-start gap-2">
                          <span className="text-amber-600 mt-0.5">4.</span>
                          <span>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–æ–Ω—É—Å—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã –ª—é–±—ã—Ö –∑–∞–∫–∞–∑–æ–≤</span>
                        </li>
                      </ul>
                    </div>
                    
                    <div className="bg-amber-100 dark:bg-amber-900/30 rounded-lg p-3 border border-amber-300 dark:border-amber-700">
                      <p className="text-xs text-center font-medium text-amber-800 dark:text-amber-200">
                        üí∞ –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –ø–æ 500 ‚ÇΩ –∑–∞ –∫–∞–∂–¥–æ–≥–æ!
                      </p>
                      <p className="text-[10px] text-center text-amber-700 dark:text-amber-300 mt-1">
                        –ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
                      </p>
                    </div>
                  </CardContent>
                </Card>
              </div>
              <Separator />
            </>
          )}

          {!isInstalled && (
            <>
              <div>
                {deferredPrompt ? (
                  <>
                    <Button
                      variant="default"
                      className="w-full h-12 text-base bg-gradient-to-r from-primary to-green-600 hover:from-primary/90 hover:to-green-600/90"
                      onClick={handleInstallApp}
                    >
                      <Icon name="Smartphone" size={20} className="mr-3" />
                      –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
                    </Button>
                    <p className="text-xs text-muted-foreground text-center mt-2">
                      –ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø —Å –≥–ª–∞–≤–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞
                    </p>
                  </>
                ) : (
                  <Card className="bg-gradient-to-br from-primary/10 to-primary/5 border-primary/20">
                    <CardContent className="pt-4 pb-4">
                      <div className="flex items-start gap-3">
                        <Icon name="Smartphone" size={24} className="text-primary flex-shrink-0 mt-1" />
                        <div className="flex-1">
                          <p className="font-semibold text-sm mb-2">–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</p>
                          <p className="text-xs text-muted-foreground mb-2">
                            1. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –º–µ–Ω—é –±—Ä–∞—É–∑–µ—Ä–∞ (‚ãÆ)<br/>
                            2. –í—ã–±–µ—Ä–∏—Ç–µ "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"<br/>
                            3. –ì–æ—Ç–æ–≤–æ!
                          </p>
                          <a 
                            href="/install-app.html" 
                            target="_blank"
                            className="text-xs text-primary hover:underline"
                          >
                            –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è ‚Üí
                          </a>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                )}
              </div>
              <Separator />
            </>
          )}

          {isInstalled && (
            <>
              <div>
                <Card className="bg-gradient-to-br from-green-50 to-green-100 dark:from-green-950/20 dark:to-green-900/20 border-green-200 dark:border-green-800">
                  <CardContent className="pt-4 pb-4">
                    <div className="flex items-center gap-3">
                      <Icon name="CheckCircle2" size={24} className="text-green-600 dark:text-green-400 flex-shrink-0" />
                      <div>
                        <p className="font-semibold text-sm text-green-900 dark:text-green-100">–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ</p>
                        <p className="text-xs text-green-700 dark:text-green-300">–°–ø–∞—Å–∏–±–æ –∑–∞ —É—Å—Ç–∞–Ω–æ–≤–∫—É!</p>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              </div>
              <Separator />
            </>
          )}


          {siteSettings?.price_list_url && (
            <>
              <div>
                <a 
                  href={siteSettings.price_list_url} 
                  target="_blank" 
                  rel="noopener noreferrer"
                  className="block"
                >
                  <Button 
                    variant="default" 
                    className="w-full h-12 text-base"
                    onClick={() => setOpen(false)}
                  >
                    <Icon name="Download" size={20} className="mr-3" />
                    –°–∫–∞—á–∞—Ç—å –ø—Ä–∞–π—Å-–ª–∏—Å—Ç
                  </Button>
                </a>
              </div>
              <Separator />
            </>
          )}

          {siteSettings?.promotions && (
            <div>
              <Card className="bg-gradient-to-br from-primary/10 to-primary/5 border-primary/20">
                <CardHeader>
                  <CardTitle className="flex items-center gap-2 text-lg">
                    <Icon name="Sparkles" size={20} className="text-primary" />
                    –ê–∫—Ü–∏–∏
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-sm whitespace-pre-line">{siteSettings.promotions}</p>
                </CardContent>
              </Card>
            </div>
          )}

          {siteSettings?.promotions && <Separator />}

          {siteSettings?.additional_info && (
            <div>
              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center gap-2 text-lg">
                    <Icon name="Info" size={20} className="text-primary" />
                    –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-sm whitespace-pre-line">{siteSettings.additional_info}</p>
                </CardContent>
              </Card>
            </div>
          )}

          {siteSettings?.additional_info && <Separator />}

          <div>
            <h3 className="text-sm font-semibold text-muted-foreground mb-3 uppercase tracking-wider">
              –û –Ω–∞—Å
            </h3>
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Icon name="Award" size={20} className="text-primary" />
                  –ù–∞—à–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-3">
                <div className="flex items-start gap-3">
                  <Icon name="CheckCircle" size={18} className="text-primary mt-0.5 flex-shrink-0" />
                  <div>
                    <p className="font-medium text-sm">–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ä–∞—Å—Ç–µ–Ω–∏—è</p>
                    <p className="text-xs text-muted-foreground">–°—Ç—Ä–æ–≥–∏–π –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞ –≤—Å–µ—Ö —ç—Ç–∞–ø–∞—Ö</p>
                  </div>
                </div>
                <div className="flex items-start gap-3">
                  <Icon name="CheckCircle" size={18} className="text-primary mt-0.5 flex-shrink-0" />
                  <div>
                    <p className="font-medium text-sm">–ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞</p>
                    <p className="text-xs text-muted-foreground">–ü–æ –≤—Å–µ–π –†–æ—Å—Å–∏–∏</p>
                  </div>
                </div>
                <div className="flex items-start gap-3">
                  <Icon name="CheckCircle" size={18} className="text-primary mt-0.5 flex-shrink-0" />
                  <div>
                    <p className="font-medium text-sm">–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏</p>
                    <p className="text-xs text-muted-foreground">–ü–æ–º–æ—â—å –ø–æ —É—Ö–æ–¥—É –∑–∞ —Ä–∞—Å—Ç–µ–Ω–∏—è–º–∏</p>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>

          {(siteSettings?.phone || siteSettings?.email || siteSettings?.address) && (
            <>
              <Separator />
              <div>
                <h3 className="text-sm font-semibold text-muted-foreground mb-3 uppercase tracking-wider">
                  –ö–æ–Ω—Ç–∞–∫—Ç—ã
                </h3>
                <div className="space-y-3">
                  {siteSettings.phone && (
                    <a 
                      href={`tel:${siteSettings.phone}`}
                      className="flex items-center gap-3 p-3 rounded-lg hover:bg-accent transition-colors"
                    >
                      <Icon name="Phone" size={20} className="text-primary flex-shrink-0" />
                      <div>
                        <p className="text-xs text-muted-foreground">–¢–µ–ª–µ—Ñ–æ–Ω</p>
                        <p className="font-medium">{siteSettings.phone}</p>
                      </div>
                    </a>
                  )}
                  {siteSettings.email && (
                    <a 
                      href={`mailto:${siteSettings.email}`}
                      className="flex items-center gap-3 p-3 rounded-lg hover:bg-accent transition-colors"
                    >
                      <Icon name="Mail" size={20} className="text-primary flex-shrink-0" />
                      <div>
                        <p className="text-xs text-muted-foreground">Email</p>
                        <p className="font-medium break-all">{siteSettings.email}</p>
                      </div>
                    </a>
                  )}
                  {siteSettings.address && (
                    <div className="flex items-start gap-3 p-3 rounded-lg">
                      <Icon name="MapPin" size={20} className="text-primary flex-shrink-0 mt-0.5" />
                      <div>
                        <p className="text-xs text-muted-foreground">–ê–¥—Ä–µ—Å</p>
                        <p className="font-medium">{siteSettings.address}</p>
                      </div>
                    </div>
                  )}
                  {siteSettings.work_hours && (
                    <div className="flex items-start gap-3 p-3 rounded-lg">
                      <Icon name="Clock" size={20} className="text-primary flex-shrink-0 mt-0.5" />
                      <div>
                        <p className="text-xs text-muted-foreground">–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã</p>
                        <p className="font-medium">{siteSettings.work_hours}</p>
                      </div>
                    </div>
                  )}
                </div>
              </div>
            </>
          )}
        </div>
      </SheetContent>
    </Sheet>
  );
};

export default SideMenu;